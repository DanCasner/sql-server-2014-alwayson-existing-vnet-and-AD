{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {

    "newStorageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "The prefix of the new storage account created to store the SQL VMs disks. Three storage accounts will be created using this string as a prefix for the name"
      }
    },

    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the Storage Account created"
      },
      "defaultValue": "Premium_LRS"
    },

    "vmNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "The Prefix for the SQL VMs"
      }
    },

    "sqlVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D1",
        "Standard_DS1",
        "Standard_D2",
        "Standard_DS2",
        "Standard_D3",
        "Standard_DS3",
        "Standard_D4",
        "Standard_DS4",
        "Standard_D11",
        "Standard_DS11",
        "Standard_D12",
        "Standard_DS12",
        "Standard_D13",
        "Standard_DS13",
        "Standard_D14",
        "Standard_DS14"
      ],
      "metadata": {
        "description": "The size of the SQL VMs Created"
      },
      "defaultValue": "Standard_DS3"
    },

    "sqlWitnessVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D1",
        "Standard_DS1",
        "Standard_D2",
        "Standard_DS2",
        "Standard_D3",
        "Standard_DS3",
        "Standard_D4",
        "Standard_DS4",
        "Standard_D11",
        "Standard_DS11",
        "Standard_D12",
        "Standard_DS12",
        "Standard_D13",
        "Standard_DS13",
        "Standard_D14",
        "Standard_DS14"
      ],
      "metadata": {
        "description": "The size of the Witness VM Created"
      },
      "defaultValue": "Standard_DS1"
    },

    "sqlServerServiceAccountUserName": {
      "type": "string",
      "metadata": {
        "description": "The SQL Server Service account name"
      },
      "defaultValue": "sqlservice"
    },

    "sqlServerServiceAccountPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The SQL Server Service account password"
      }
    },

    "virtualNetworkId": {
      "type": "string",
      "metadata": {
        "description": "Resource ID of the existing VNET"
      },
      "defaultValue": "vnet01"
    },

    "sqlSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the existing subnet in the existing VNET to which the SQL VMs should be deployed"
      },
      "defaultValue": "default"
    },

    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The existing Active Directory DNS domain name"
      }
    },

    "primaryAdIpAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of Primary AD"
      },
      "defaultValue": "10.0.0.4"
    },

    "secondaryIpAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of Secondary AD"
      },
      "defaultValue": "10.0.0.5"
    },

    "sqlLBIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The address of ILB for SQL Server AlwaysOn listener"
      },
      "defaultValue": "10.0.0.10"
    },

    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the VMs and Domain"
      },
      "defaultValue": "sqlAdministrator"
    },

    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the VMs and Domain"
      }
    },

    "location": {
      "type": "string",
      "allowedValues": [
        "West US",
        "East US",
        "East US 2",
        "Central US",
        "South Central US",
        "North Central US",
        "North Europe",
        "West Europe",
        "East Asia",
        "Southeast Asia",
        "Japan East",
        "Japan West",
        "Southeast Asia"
      ],
      "metadata": {
        "description": "The region in which to deploy the resources"
      }
    },

    "dataBaseNames": {
      "type": "array",
      "metadata": {
        "description": "An array of databases name, each database will be created and added to the availability group"
      },
      "defaultValue": [ "testdb1", "testdb2" ]
    },

    "assetLocation": {
      "type": "string",
      "metadata": {
        "description": "The location of resources that the script is dependent on such as linked templates and DSC modules"
      },
      "defaultValue": "https://raw.githubusercontent.com/robotechredmond/sql-server-2014-alwayson-dsc/master"
    }

  },

  "variables": {

    "sqlSubnetRef": "[concat(variables('virtualNetworkId'),'/subnets/',parameters('sqlSubnetName'))]",

    "sqlStorageName": "[concat(parameters('newStorageAccountNamePrefix'),'sqlsa')]",
    "sqlClusterTemplateURL": "[concat(parameters('assetLocation'),'/SqlClusterVmTemplate.json')]",
    "deploySqlClusterVms": "deploySqlClusterVms",
    "deploySqlClusterVmsId": "[concat('Microsoft.Resources/deployments/', variables('deploySqlClusterVms'))]",

    "sqlWitnessTemplateURL": "[concat(parameters('assetLocation'),'/SqlWitnessVmTemplate.json')]",
    "sqlWitnessStorageName": "[concat(parameters('newStorageAccountNamePrefix'),'sqlwsa')]",
    "deploySqlWitnessVms": "deploySqlWitnessVms",
    "deploySqlWitnessVmsId": "[concat('Microsoft.Resources/deployments/', variables('deploySqlWitnessVms'))]",

    "updateSQLWNic": "updateSQLWNic",
    "updateSQLWNicId": "[concat('Microsoft.Resources/deployments/', variables('updateSQLWNic'))]",
    "sqlwNicName": "SqlWitnessMachine-Nic-0",
    "nicTemplateURL": "[concat(parameters('assetLocation'),'/nic.json')]",

    "updateSQLCNic1": "updateSQLCNic1",
    "updateSQLCNic1Id": "[concat('Microsoft.Resources/deployments/', variables('updateSQLCNic1'))]",
    "sqlNicName1": "SqlMachine-Nic-0",

    "updateSQLCNic2": "updateSQLCNic2",
    "updateSQLCNic2Id": "[concat('Microsoft.Resources/deployments/', variables('updateSQLCNic2'))]",
    "sqlNicName2": "SqlMachine-Nic-1",

    "publicLBName": "sqlLoadBalancer",
    "lbFE": "SqlLBFE",
    "lbBE": "SqlLBBE",
    "sqllbID":"[resourceId('Microsoft.Network/loadBalancers',variables('publicLBName'))]",
    "sqllbFEConfigID": "[concat(variables('sqllbID'),'/frontendIPConfigurations/',variables('lbFE'))]",
    "sqlBEAddressPoolID": "[concat(variables('sqllbID'),'/backendAddressPools/',variables('lbBE'))]",

    "deploySqlWitnessShare": "deploySqlWitnessShare",
    "deploySqlWitnessShareId": "[concat('Microsoft.Resources/deployments/', variables('deploySqlWitnessShare'))]",
    "deploySqlWitnessShareTemplateUrl": "[concat(parameters('assetLocation'),'/DeploySqlWitnessShare.json')]",
    "sqlWitnessSharePath" : "[concat(parameters('vmNamePrefix'),'-fsw')]",
    "sqlWitnessVmNamePrefix": "[concat(parameters('vmNamePrefix'),'-SqlW-')]",
    "sqlwVMName": "[concat(variables('sqlWitnessVmNamePrefix'),'0')]",

    "deploySqlAlwaysOn": "deploySqlAlwaysOn",
    "deploySqlAlwaysOnTemplateUrl": "[concat(parameters('assetLocation'),'/DeploySqlAlwaysOn.json')]",

    "sqlClusterVmNamePrefix": "[concat(parameters('vmNamePrefix'),'-SqlC-')]",
    "sqlCVMName1": "[concat(variables('sqlClusterVmNamePrefix'),'0')]",
    "sqlCVMName2": "[concat(variables('sqlClusterVmNamePrefix'),'0')]",

    "sqlLBName": "sqlLoadBalancer",

    "sqlAOEPName": "[concat(parameters('vmNamePrefix'),'-hadr')]",
    "sqlAOAGName": "[concat(parameters('vmNamePrefix'),'-ag')]",
    "sqlAOListenerName": "[concat(parameters('vmNamePrefix'),'ag-listener')]",

    "sqlAvailabilitySetName": "sqlAvailabilitySet"
  },

  "resources": [

    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('sqlAvailabilitySetName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('location')]"
    },

    {
      "name": "[variables('deploySqlClusterVms')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', variables('sqlAvailabilitySetName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('sqlClusterTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": { "value": "[parameters('location')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "storageAccount": { "value": "[variables('SqlStorageName')]" },
          "storageAccountType": { "value": "[parameters('storageAccountType')]" },
          "nicSubnetUri": { "value": "[variables('sqlSubnetRef')]" },
          "lbSubnetUri": { "value": "[variables('sqlSubnetRef')]" },
          "vmNamePrefix": { "value": "[variables('sqlClusterVmNamePrefix')]" },
          "sqlLBIPAddress": { "value": "[parameters('sqlLBIPAddress')]" },
          "vmSize": { "value": "[parameters('sqlVMSize')]" },
          "availabilitySetName": { "value": "[variables('sqlAvailabilitySetName')]" }
        }
      }
    },

    {
      "name": "[variables('deploySqlWitnessVms')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', variables('sqlAvailabilitySetName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('sqlWitnessTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": { "value": "[parameters('location')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "storageAccount": { "value": "[variables('sqlWitnessStorageName')]" },
          "subnetUri": { "value": "[variables('sqlSubnetRef')]" },
          "storageAccountType": { "value": "[parameters('storageAccountType')]" },
          "vmNamePrefix": { "value": "[variables('sqlWitnessVmNamePrefix')]" },
          "vmSize": { "value": "[parameters('sqlWitnessVMSize')]" },
          "availabilitySetName": { "value": "[variables('sqlAvailabilitySetName')]" }
        }
      }
    },

    {
      "name": "[variables('updateSQLWNic')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('deploySqlWitnessVmsId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nicTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "nicName": {
            "value": "[variables('sqlwNicName')]"
          },
          "ipConfigurations": {
            "value": [
              {
                "name": "ipconfig1",
                "properties": {
                  "privateIPAllocationMethod": "Dynamic",
                  "subnet": {
                    "id": "[variables('sqlSubnetRef')]"
                  }
                }
              }
            ]
          },
          "dnsServers": {
            "value": [ "[parameters('primaryAdIpAddress')]", "[parameters('secondaryIpAddress')]" ]
          }

        }
      }
    },
    {
      "name": "[variables('updateSQLCNic1')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('deploySqlClusterVmsId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nicTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "nicName": {
            "value": "[variables('sqlNicName1')]"
          },
          "ipConfigurations": {
            "value": [
              {
                "name": "ipconfig1",
                "properties": {
                  "privateIPAllocationMethod": "Dynamic",
                  "subnet": {
                    "id": "[variables('sqlSubnetRef')]"
                  },
                "loadBalancerBackendAddressPools": [
                  {
                    "id":"[variables('sqlBEAddressPoolID')]"
                  }
		 ]
                }
              }
            ]
          },
          "dnsServers": {
            "value": [ "[parameters('primaryAdIpAddress')]", "[parameters('secondaryIpAddress')]" ]
          }

        }
      }
    },
    {
      "name": "[variables('updateSQLCNic2')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('deploySqlClusterVmsId')]",
        "[variables('updateSQLCNic1Id')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nicTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "nicName": {
            "value": "[variables('sqlNicName2')]"
          },
          "ipConfigurations": {
            "value": [
              {
                "name": "ipconfig1",
                "properties": {
                  "privateIPAllocationMethod": "Dynamic",
                  "subnet": {
                    "id": "[variables('sqlSubnetRef')]"
                  },
                "loadBalancerBackendAddressPools": [
                  {
                    "id":"[variables('sqlBEAddressPoolID')]"
                  }
		 ]
                }
              }
            ]
          },
          "dnsServers": {
            "value": [ "[parameters('primaryAdIpAddress')]", "[parameters('secondaryIpAddress')]" ]
          }

        }
      }
    },
    {
      "name": "[variables('deploySqlWitnessShare')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('updateSQLWNicId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deploySqlWitnessShareTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sqlwVMName": { "value": "[variables('sqlwVMName')]" },
          "domainName": { "value": "[parameters('domainName')]" },
          "location": { "value": "[parameters('location')]" },
          "sharePath": { "value": "[concat(parameters('dnsPrefix'),'-fsw')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "assetLocation": { "value": "[parameters('assetLocation')]" }
        }
      }
    },
    {
      "name": "[variables('deploySqlAlwaysOn')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('updateSQLCNic1Id')]",
        "[variables('updateSQLCNic2Id')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deploySqlAlwaysOnTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sqlVMNamePrefix": { "value": "[variables('sqlClusterVmNamePrefix')]" },
          "domainName": { "value": "[parameters('domainName')]" },
          "sharePath": { "value": "[variables('sqlWitnessSharePath')]" },
          "sqlwVMName": { "value": "[variables('sqlwVMName')]" },
          "sqlLBName": { "value": "[variables('sqlLBName')]" },
          "sqlLBIPAddress": { "value": "[parameters('sqlLBIPAddress')]" },
          "dataBaseNames": { "value": "[parameters('dataBaseNames')]" },
          "location": { "value": "[parameters('location')]" },
          "sqlServerServiceAccountUserName": { "value": "[parameters('sqlServerServiceAccountUserName')]" },
          "sqlServerServiceAccountPassword": { "value": "[parameters('sqlServerServiceAccountPassword')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "assetLocation": { "value": "[parameters('assetLocation')]" },
          "sqlAlwaysOnEndpointName": { "value": "[variables('sqlAOEPName')]" },
          "sqlAlwaysOnAvailabilityGroupName": { "value": "[variables('sqlAOAGName')]" },
          "sqlAlwaysOnAvailabilityGroupListenerName": { "value": "[variables('sqlAOListenerName')]" }
        }
      }
    }
  ],

  "outputs": {
  }
}
